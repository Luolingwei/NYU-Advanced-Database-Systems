# Test 21
// Test for multiple deadlock detection
// In this case, last write W(T5, x6, 600) will cause 2 cycles in 1 round
// T1 -> T2, T2 -> T3, T3 -> T4, T4 -> T5, T5 -> T6, T6 -> T1, T5 -> T3
// T1 will be aborted first, then T3 will be aborted second
// after 2 abort in 1 round, the wait-for graph will be T4 -> T5, T5 -> T6
// T2 can be committed directly, then T6, T5, T4

begin(T6)
begin(T5)
begin(T4)
begin(T3)
begin(T2)
begin(T1)
R(T1, x1)
R(T2, x2)
R(T3, x3)
R(T4, x4)
R(T5, x5)
R(T6, x6)
R(T3, x6)
W(T6, x1, 100)
W(T1, x2, 200)
W(T2, x3, 300)
W(T3, x4, 400)
W(T4, x5, 500)
W(T5, x6, 600)
end(T2)
end(T6)
end(T5)
end(T4)
dump()

// Final status of dump
// x3: 300 at site 4
// x5: 500 at site 6
// x6: 600 at all sites
// x1: 100 at site 2
// Other variables will not be changed (initial value).
